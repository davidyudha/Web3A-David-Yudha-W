{"version":3,"sources":["assets/images/harpot.svg","common/layout/navbar-landing.js","common/component/button/button-home.js","modules/landing-component.js","app/landing-page.js","modules/portofolio-component.js","app/portofolio-page.js","common/router/router.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","Menu","SubMenu","state","current","handleClick","e","console","log","setState","key","className","onClick","this","selectedKeys","mode","Item","to","Component","ButtonHome","type","text","disabled","borderRadius","background","textColor","border","margin","marginLeft","marginRight","marginTop","marginBottom","style","backgroundColor","color","Content","Layout","LandingComponent","image1","require","props","initialData","showModal","handleOk","handleCancel","overflow","lg","md","sm","src","alt","maxWidth","span","title","visible","onOk","onCancel","LandingPage","PortofolioComponent","order","handlePlus","handleMinus","value","PortofolioPage","Router","exact","path","component","App","React","Boolean","window","location","hostname","match","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d19728b2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/harpot.51aeb360.svg\";","import React, { Component } from 'react';\r\nimport { Menu } from 'antd';\r\nimport '../layout/css/navbar-style.css';\r\nimport {\r\n  MailOutlined,\r\n  AppstoreOutlined,\r\n  SettingOutlined,\r\n} from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nclass Navbar extends Component {\r\n  state = {\r\n    current: 'mail',\r\n  };\r\n\r\n  handleClick = e => {\r\n    console.log('click ', e);\r\n    this.setState({\r\n      current: e.key,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n    <nav className=\"menuBar\">\r\n      <Menu onClick={this.handleClick} selectedKeys={[this.state.current]} mode=\"horizontal\">\r\n        <Menu.Item>\r\n            <Link to=\"/\">Profile</Link> \r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          <Link to=\"/portofolio\">Shop</Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nimport './style.css';\r\n\r\nfunction ButtonHome({\r\n    type, text, disabled, borderRadius = 25,\r\n    background = '#4D5AF2', textColor = \"white\", border = 'none',\r\n    margin = '0px', marginLeft, marginRight, marginTop, marginBottom,\r\n    className,onClick\r\n})  //untuk membuat komponen kita membuat sebuah fungsi yang ada, dari fungsi itu nantinya kita definisikan apa saja yang mau\r\n//dibuat secara fleksibel seperti tipenya apa, text atau yg lain, untuk mengetahui itu bisa liat di dokumentasinya ant design\r\n{\r\n    return (\r\n        <Button\r\n            type={type}\r\n            className={className}\r\n            disabled={disabled}\r\n            style={{\r\n                backgroundColor: background,\r\n                color: textColor,\r\n                borderRadius: borderRadius,\r\n                border: border,\r\n                margin: margin,\r\n                marginLeft: marginLeft,\r\n                marginRight: marginRight,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n            }}\r\n            onClick={onClick}\r\n        >\r\n            {text}\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport default ButtonHome;","import React, { Component } from 'react'; //import dari react biasa\r\nimport { Layout, Row, Col, Modal } from 'antd'; //import dari ant seperti biasa\r\nimport '../assets/css/landing.css' //import css dari folder css yang ada di folder assets\r\nimport Navbar from '../common/layout/navbar-landing' //import komponen navbar dari folder layout yang ada di folder common \r\nimport ButtonHome from '../common/component/button/button-home'; //import komponen buttonhome yang ada di dalamn folder component yang ada di folder common\r\n\r\nconst { Content } = Layout; // membuat konstanta content yang berasal dari bawaan layout ant design, bisa dicek di dokumentasi antdesign\r\n\r\nclass LandingComponent extends Component{\r\n    render(){\r\n        const image1 = require(`../assets/images/harpot.svg`); //membuat variabel image 1 dimana isinya merupakan importan gambar yang ada dari folder images\r\n        const {initialData,showModal,handleOk,handleCancel} = this.props; {/* ini merupakan fungsi\" yang sudah di definsiikan di landing-page.js \r\n        kemudian kita panggil di halaman landing-component.js ketika kita memamnggil komponent dari parent komponen, komponen yang dipanggil\r\n        akan menjadi sebuah properti, kemudian kita dapat menggunakan properti itu dihalaman ini.\r\n        */}\r\n        return(\r\n            <Layout className=\"landing-container\">\r\n                {/* <Navbar/>  ini merupakan component navbar yang kita import dari folder layout yang ada di common */}\r\n                <Content style={{ overflow: \"hidden\" }}> {/* ini merupakan component content yang sudah di define sebelumnya*/}\r\n                    <Row className=\"section-container\">\r\n                        <Col lg={12} md={12} sm={12}>\r\n                            <div className=\"image-big-container\">\r\n                                <img\r\n                                    src={image1}\r\n                                    alt=\"Home 1\"\r\n                                    style={{maxWidth: '80%'}}\r\n                                />\r\n                            </div>\r\n                        </Col>\r\n                        <Col lg={12} md={12} sm={12}>\r\n                            <Row>\r\n                                <Col span={24}>\r\n                                    <div className=\"title-container\">\r\n                                        <span className=\"text-soft-blue title-biggest bold\">About Me</span>\r\n                                        <br/>\r\n                                        <span className=\"text-soft-blue title-small bold\">David Yudha Wibantara</span>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col span={24}>\r\n                                    <div className=\"image-hidden\">\r\n                                        <img\r\n                                            src={image1}\r\n                                            alt=\"Home 1\"\r\n                                            style={{maxWidth: '100%'}}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"description-container desc-medium\">\r\n                                        Just an ordinary person, <br /> \r\n                                        Seorang Potterhead yang tersesat di KOMSI :v\r\n                                    </div>\r\n                                </Col>\r\n                                <Col span={24}>\r\n                                    <div className=\"button-section-1-container\">                                \r\n                                        <ButtonHome\r\n                                            text=\"Show Me\"\r\n                                            className='button-participate'\r\n                                            onClick = {showModal}\r\n                                        />{/* ini merupakan component button yang kita sudah definisikan di atas atas nama buttonhome*/}\r\n                                        <ButtonHome\r\n                                            text=\"Another Information\"\r\n                                            background=\"white\"\r\n                                            textColor=\"#4D5AF2\"\r\n                                            border=\"1px solid #4D5AF2\"\r\n                                            marginLeft={16}\r\n                                            className='button-participate'\r\n                                        />\r\n                                    </div>\r\n                                </Col>\r\n                                <Modal\r\n                                    title=\"Contact\"\r\n                                    visible={initialData.visible}\r\n                                    onOk={handleOk}\r\n                                    onCancel={handleCancel}\r\n                                    className = \"modal-notif\"\r\n                                    >\r\n                                    <p className=\"text-notif\">You can contact me at davidyudha@mail.ugm.ac.id</p>\r\n                                </Modal>{/* ini merupakan modal yang didalamnya memuat beberapa fungsi yang sudah di definisikan di atas sebagai this.props*/}\r\n                            </Row>\r\n                        </Col>  \r\n                    </Row>\r\n                </Content>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LandingComponent;","import React, {Component} from 'react'; \r\n// import react merupakan bawaan dari react itu sendiri\r\nimport LandingComponent from '../modules/landing-component'\r\n\r\n{/*import landingcomponent merupakan child dari parent landingpage, di\r\nfile landingpage, kita butuh sebuah componen yang akan digunakan untuk menampilkan halamannya\r\noleh karena itu kita membutuhkan landing component yang ada di folder modules. */}\r\n\r\n\r\n\r\nclass LandingPage extends Component {\r\n    state ={\r\n        visible: false,\r\n    }\r\n    //state digunakan untuk membuat inisial data yang ada dihalaman landing, dia dibuat di file landing-page.js\r\n    //pada file ini kita membuat variabel visible yang kita buat nilai awalnya false, variabel ini nantinya akan\r\n    //digunakan untuk menampilkan modal yang akan digunakan nanti\r\n\r\n    componentDidMount(){\r\n\r\n    }\r\n    //componentdimount nanti saja ya wkwk\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n          visible: true,\r\n        });\r\n    };\r\n    //showmodal ini merupakan function, dia memliki fungsi untuk mengubah state visible yang awalnya false,\r\n    //menjadi true, jadi ketika modalnya diklik akan keluar modalnya.\r\n\r\n    handleOk = e => {\r\n        console.log(e);\r\n        this.setState({\r\n          visible: false,\r\n        });\r\n      };\r\n    \r\n      handleCancel = e => {\r\n        console.log(e);\r\n        this.setState({\r\n          visible: false,\r\n        });\r\n      };\r\n    //handleOk dan handleCancel digunakan untuk close modal\r\n\r\n    render(){\r\n        return (\r\n            <LandingComponent\r\n                initialData = {this.state} //ini maksudnya membuat varibel initalData yg isinya semua state yang telah dibuat\r\n                showModal = {this.showModal} //ini maksudnya membuat variabel showmodal yang akan dipanggil, this.showmodal mksdnya itu manggil functin show modal, karena masih satu halaman pakainya this.\r\n                handleCancel = {this.handleCancel} //sama seperti showmodal\r\n                handleOk = {this.handleOk} //sama seperti showmodal\r\n            />\r\n            //nah di sini kita mereturn component yang sudah kita import di atas di dalam landingcomponent itu\r\n            //kita bisa memasukkan data atau function yang kita perlukan, fungsi yang kita perlukan akan menjadi\r\n            //sebuah properti jika kita panggil di landing-component.js\r\n        );\r\n    }\r\n}\r\n\r\nexport default LandingPage;","import React, { Component, Fragment } from 'react'; \r\nimport { Layout, Row, Col, Modal } from 'antd'; \r\nimport '../assets/css/portofolio.css' \r\nimport Navbar from '../common/layout/navbar-landing' \r\nimport ButtonHome from '../common/component/button/button-home'; \r\n\r\nclass PortofolioComponent extends Component{\r\n    state ={\r\n        order: 1\r\n    }\r\n\r\n    handlePlus = () => {\r\n            this.setState({\r\n                order : this.state.order + 1\r\n            })\r\n    }\r\n\r\n    handleMinus = () => {\r\n        if (this.state.order > 0) {\r\n            this.setState({\r\n                order : this.state.order - 1\r\n            })\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <Fragment>\r\n                <div className=\"header\">\r\n                    Produk Merchandise Wizarding World\r\n                </div>\r\n                <div className=\"troley\">\r\n                    <p className=\"troley-cart\">Total Belanja : {this.state.order} </p>\r\n                </div>\r\n                <div className=\"card\">\r\n                    <div className=\"img-thumb-product\">\r\n                        <img src=\"https://s1.bukalapak.com/img/65863474481/original/14de00cb97a4032c869a363b60e4be25b_bayar_di_tempat_buku_noteb.png\" alt=\"Notebook Harry Potter\"/>\r\n                    </div>\r\n                    <p className=\"product-name\">Notebook Harpot</p>\r\n                    <p className=\"product-price\">Rp. 15.000</p>\r\n                    <div className=\"counter\">\r\n                        <button className=\"minus\" onClick={this.handleMinus}>-</button>\r\n                        <input className=\"input\" type=\"text\" value={this.state.order}/>\r\n                        <button className=\"plus\" onClick={this.handlePlus}>+</button>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PortofolioComponent;","import React, {Component} from 'react'; \r\nimport PortofolioComponent from '../modules/portofolio-component'\r\n\r\n\r\n\r\n\r\nclass PortofolioPage extends Component {\r\n    state ={\r\n        visible: false,\r\n    }\r\n   \r\n    componentDidMount(){\r\n\r\n    }\r\n    \r\n\r\n    showModal = () => {\r\n        this.setState({\r\n          visible: true,\r\n        });\r\n    };\r\n\r\n    handleOk = e => {\r\n        console.log(e);\r\n        this.setState({\r\n          visible: false,\r\n        });\r\n      };\r\n    \r\n      handleCancel = e => {\r\n        console.log(e);\r\n        this.setState({\r\n          visible: false,\r\n        });\r\n      };\r\n    //handleOk dan handleCancel digunakan untuk close modal\r\n\r\n    render(){\r\n        return (\r\n            <PortofolioComponent\r\n                initialData = {this.state} //ini maksudnya membuat varibel initalData yg isinya semua state yang telah dibuat\r\n                showModal = {this.showModal} //ini maksudnya membuat variabel showmodal yang akan dipanggil, this.showmodal mksdnya itu manggil functin show modal, karena masih satu halaman pakainya this.\r\n                handleCancel = {this.handleCancel} //sama seperti showmodal\r\n                handleOk = {this.handleOk} //sama seperti showmodal\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default PortofolioPage;","import React, {Component} from 'react';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport LandingPage from '../../app/landing-page';\r\nimport PortofolioPage from '../../app/portofolio-page'\r\n\r\nclass Router extends Component {\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Route exact path=\"/\" component={LandingPage}/>\r\n                <Route path=\"/portofolio\" component={PortofolioPage}/>\r\n            </Switch>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Router;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from \"react-router-dom\";\nimport '../src/assets/css/App.css';\nimport Navbar from './common/layout/navbar-landing';\nimport Routing from './common/router/router'\n\nclass App extends React.Component {\n  \n\n  render(){\n    return (\n      <div className=\"App\">\n        <Navbar/>\n        <Routing/>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport LandingPage from '../src/app/landing-page'\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(<BrowserRouter basename={process.env.PUBLIC_URL}><App/></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}